#!/bin/bash

# Script para expor a aplica√ß√£o Laravel publicamente
echo "üöÄ Configurando acesso p√∫blico para o Di√°rio de Obras..."

# Verificar se o Docker est√° rodando
if ! docker ps | grep -q laravel_nginx; then
    echo "‚ùå Container nginx n√£o est√° rodando. Iniciando..."
    docker compose up -d nginx
    sleep 5
fi

# Verificar se a aplica√ß√£o est√° respondendo
if curl -s http://localhost:8000 > /dev/null; then
    echo "‚úÖ Aplica√ß√£o funcionando localmente"
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo localmente"
    exit 1
fi

# Obter IP p√∫blico
PUBLIC_IP=$(curl -s https://api.ipify.org)
echo "üåê Seu IP p√∫blico: $PUBLIC_IP"

# Verificar se a porta 8000 est√° aberta
echo "üîç Verificando conectividade..."

# Tentar diferentes m√©todos de t√∫nel
echo "üì° Tentando configurar t√∫nel..."

# M√©todo 1: Usar o ngrok que j√° baixamos
if [ -f "./ngrok" ]; then
    echo "üîß Usando ngrok..."
    ./ngrok http 8000 --log=stdout > ngrok.log 2>&1 &
    NGROK_PID=$!
    sleep 5

    # Tentar obter a URL do ngrok
    NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*"' | head -1 | cut -d'"' -f4)

    if [ ! -z "$NGROK_URL" ]; then
        echo "üéâ T√∫nel ngrok criado com sucesso!"
        echo "üì± Acesse pelo celular: $NGROK_URL"
        echo "üí° Mantenha este terminal aberto para o t√∫nel funcionar"
        echo "üõë Para parar, pressione Ctrl+C"

        # Manter o script rodando
        wait $NGROK_PID
    else
        echo "‚ùå Falha ao criar t√∫nel ngrok"
        kill $NGROK_PID 2>/dev/null
    fi
else
    echo "‚ùå ngrok n√£o encontrado"
fi

echo "üîß Alternativas:"
echo "1. Configure port forwarding no seu roteador (porta 8000)"
echo "2. Use um servi√ßo de t√∫nel online"
echo "3. Conecte o PC no Wi-Fi em vez do cabo"




